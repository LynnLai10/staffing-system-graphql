# import UserOrderByInput ScheduleOrderByInput from './generated/prisma.graphql'

type Query {
    users(query: String, orderBy: UserOrderByInput): [User!]!
    me: User!
    schedules(orderBy: ScheduleOrderByInput): [Schedule!]!
    mySchedules(orderBy: ScheduleOrderByInput): [Schedule!]!
}

type Mutation {
    createUser(auth: String! data: CreateUserInput!): AuthPayload!
    updateUser(employeeId: String! data: UpdateUserInput!): User!
    deleteUser(employeeId: String!): User!
    login(data: LoginInput!): AuthPayload!
    createSchedule(employeeId: String!): Schedule!
    updateSchedule(data: UpdateScheduleInput!): Schedule!
    resetSchedule(resetItem: String!): Schedule!
    resetAvailability(employeeId: String! isDefault: Boolean!): User!
}

type AuthPayload {
    token: String!
    user: User!
}

input CreateUserInput {
    accountType: String!
    employeeId: String!
    sex: String!
    name: String!
    password: String!
}

input UpdateUserInput {
    accountType: String
    employeeId: String
    sex: String
    name: String
    password: String
    availability_next: String
    availability_default: String
}

input UpdateScheduleInput {
    freetime_next: String
    freetime_default: String
    useDefault: Boolean
}

type User {
    id: ID!
    accountType: String!
    employeeId: String!
    name: String!
    sex: String!
    password: String!
    createdAt: String!
    updatedAt: String!
    availability_next: String
    availability_default: String
}

input LoginInput {
    employeeId: String!
    password: String!
}

type Schedule {
    id: ID!
    freetime_next: String!
    freetime_default: String!
    useDefault: Boolean!
    user: User!
    updatedAt: String!
    createdAt: String!
}