# import UserOrderByInput FreetimeOrderByInput from './generated/prisma.graphql'

type Query {
  users(query: String, orderBy: UserOrderByInput): [User]
  me: User
  freetimes(orderBy: FreetimeOrderByInput): [Freetime]
  myFreetimes(orderBy: FreetimeOrderByInput): [Freetime]
  schedule_interval(start: String!, end: String!): Schedule_Interval
  schedule(schedule_No: String!): Schedule
  schedule_day(day_No: String!): Schedule_Day
}

type Mutation {
  createUser(auth: String!, data: CreateUserInput!): AuthPayload!
  updateUser(employeeId: String!, data: UpdateUserInput!): User!
  deleteUser(employeeId: String!): User
  login(data: LoginInput!): AuthPayload!
  createFreetime(employeeId: String!): Freetime!
  updateFreetime(data: UpdateFreetimeInput!): Freetime!
  resetFreetime(resetItem: String!): Freetime!
  createSchedule(schedule_No: String!): Schedule
  deleteSchedule(schedule_No: String!): Schedule
  createSchedule_Day(schedule_No: String!): Schedule_Day
  createSchedule_Interval(start: String!, end: String!): Schedule_Interval
  createSchedule_Staff(data: createSchedule_StaffInput!): Schedule_Staff
  updateSchedule_Staff(data: updateSchedule_StaffInput!): Schedule_Staff
  deleteSchedule_Staff(id: ID!): Schedule_Staff
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  accountType: String!
  employeeId: String!
  sex: String!
  name: String!
  password: String!
}

input UpdateUserInput {
  accountType: String
  employeeId: String
  sex: String
  name: String
  password: String
}

input UpdateFreetimeInput {
  freetime_next: String
  freetime_default: String
  useDefault: Boolean
}

input createSchedule_StaffInput {
  day_No: String!
  schedule_No: String!
  employeeId: String
  position: String!
  interval_No: String!
}

input updateSchedule_StaffInput {
  id: ID!
  employeeId: String
  interval_No: String
}

type User {
  id: ID!
  accountType: String!
  employeeId: String!
  name: String!
  sex: String!
  password: String!
  createdAt: String!
  updatedAt: String!
}

input LoginInput {
  employeeId: String!
  password: String!
}

type Freetime {
  id: ID!
  freetime_next: String!
  freetime_default: String!
  useDefault: Boolean!
  user: User!
  updatedAt: String!
  createdAt: String!
}

type Schedule {
  id: ID!
  schedule_No: String!
  schedule_days: [Schedule_Day!]!
  schedule_staffs: [Schedule_Staff!]!
}

type Schedule_Day {
  id: ID!
  day_No: String!
  schedule_staffs: [Schedule_Staff!]!
  schedule: Schedule!
}

type Schedule_Staff {
  id: ID!
  schedule_day: Schedule_Day!
  schedule: Schedule!
  staff: User
  position: String!
  schedule_interval: Schedule_Interval!
}

type Schedule_Interval {
  id: ID!
  interval_No: String!
  start: String!
  end: String!
}
